/* Generated By:JJTree&JavaCC: Do not edit this line. HLConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ADD = 5;
  /** RegularExpression Id. */
  int ASSIGN = 6;
  /** RegularExpression Id. */
  int COMMA = 7;
  /** RegularExpression Id. */
  int DIV = 8;
  /** RegularExpression Id. */
  int EQ = 9;
  /** RegularExpression Id. */
  int GE = 10;
  /** RegularExpression Id. */
  int GT = 11;
  /** RegularExpression Id. */
  int LE = 12;
  /** RegularExpression Id. */
  int LPAREN = 13;
  /** RegularExpression Id. */
  int LSQUARE = 14;
  /** RegularExpression Id. */
  int LT = 15;
  /** RegularExpression Id. */
  int NE = 16;
  /** RegularExpression Id. */
  int PROD = 17;
  /** RegularExpression Id. */
  int RPAREN = 18;
  /** RegularExpression Id. */
  int RSQUARE = 19;
  /** RegularExpression Id. */
  int SEMICOL = 20;
  /** RegularExpression Id. */
  int SUB = 21;
  /** RegularExpression Id. */
  int AND = 22;
  /** RegularExpression Id. */
  int BY = 23;
  /** RegularExpression Id. */
  int DO = 24;
  /** RegularExpression Id. */
  int ELIF = 25;
  /** RegularExpression Id. */
  int ELSE = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int FI = 28;
  /** RegularExpression Id. */
  int FOR = 29;
  /** RegularExpression Id. */
  int FOREACH = 30;
  /** RegularExpression Id. */
  int FROM = 31;
  /** RegularExpression Id. */
  int FUN = 32;
  /** RegularExpression Id. */
  int IF = 33;
  /** RegularExpression Id. */
  int IN = 34;
  /** RegularExpression Id. */
  int ISFUN = 35;
  /** RegularExpression Id. */
  int ISINT = 36;
  /** RegularExpression Id. */
  int ISPOL = 37;
  /** RegularExpression Id. */
  int NOT = 38;
  /** RegularExpression Id. */
  int NUF = 39;
  /** RegularExpression Id. */
  int OD = 40;
  /** RegularExpression Id. */
  int OR = 41;
  /** RegularExpression Id. */
  int PRINT = 42;
  /** RegularExpression Id. */
  int PRINTLN = 43;
  /** RegularExpression Id. */
  int RETURN = 44;
  /** RegularExpression Id. */
  int THEN = 45;
  /** RegularExpression Id. */
  int TO = 46;
  /** RegularExpression Id. */
  int VAR = 47;
  /** RegularExpression Id. */
  int WHILE = 48;
  /** RegularExpression Id. */
  int X = 49;
  /** RegularExpression Id. */
  int DIGIT = 50;
  /** RegularExpression Id. */
  int LETTER = 51;
  /** RegularExpression Id. */
  int LETTERNOTX = 52;
  /** RegularExpression Id. */
  int BOOLEAN = 53;
  /** RegularExpression Id. */
  int INTEGER = 54;
  /** RegularExpression Id. */
  int IDENTIFIER = 55;
  /** RegularExpression Id. */
  int STRING = 56;
  /** RegularExpression Id. */
  int COMMENT_SINGLE = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"+\"",
    "\"=\"",
    "\",\"",
    "\"/\"",
    "\"==\"",
    "\">=\"",
    "\">\"",
    "\"<=\"",
    "\"(\"",
    "\"[\"",
    "\"<\"",
    "\"<>\"",
    "\"*\"",
    "\")\"",
    "\"]\"",
    "\";\"",
    "\"-\"",
    "\"AND\"",
    "\"BY\"",
    "\"DO\"",
    "\"ELIF\"",
    "\"ELSE\"",
    "\"END\"",
    "\"FI\"",
    "\"FOR\"",
    "\"FOREACH\"",
    "\"FROM\"",
    "\"FUN\"",
    "\"IF\"",
    "\"IN\"",
    "\"ISFUN\"",
    "\"ISINT\"",
    "\"ISPOL\"",
    "\"NOT\"",
    "\"NUF\"",
    "\"OD\"",
    "\"OR\"",
    "\"PRINT\"",
    "\"PRINTLN\"",
    "\"RETURN\"",
    "\"THEN\"",
    "\"TO\"",
    "\"VAR\"",
    "\"WHILE\"",
    "\"X\"",
    "<DIGIT>",
    "<LETTER>",
    "<LETTERNOTX>",
    "<BOOLEAN>",
    "<INTEGER>",
    "<IDENTIFIER>",
    "<STRING>",
    "<COMMENT_SINGLE>",
  };

}
